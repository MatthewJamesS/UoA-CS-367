
/* position calculation*/
right_of(X, Y) :- X is Y+1.
left_of(X, Y) :- right_of(Y, X).
next_to(X, Y) :- right_of(X, Y).
next_to(X, Y) :- left_of(X, Y).


/* Solution */
solution(Persons) :-
    /* List to create matrix */
    Persons = [
    house(1, Nationality1,  Color1,     Pet1,   Drinks1,    Smokes1),
    house(2, Nationality2,  Color2,     Pet2,   Drinks2,    Smokes2),
    house(3, Nationality3,  Color3,     Pet3,   Drinks3,    Smokes3),
    house(4, Nationality4,  Color4,     Pet4,   Drinks4,    Smokes4),
    house(5, Nationality5,  Color5,     Pet5,   Drinks5,    Smokes5)],

    /* Hints */
    member(house(_,brit,red,_,_,_), Persons),
    member(house(_,swede,_,dog,_,_), Persons),
    member(house(_,dane,_,_,tea,_), Persons),
    member(house(_,_,green,_,coffee,_), Persons),
    member(house(_,_,_,birds,_,pall_mall), Persons),
    member(house(_,_,yellow,_, _,dunhill), Persons),
    member(house(3,_,_,_,milk,_), Persons),
    member(house(1,norweigan,_,_,_,_), Persons),
    member(house(_,_, _,_,beer,bluemaster), Persons),
    member(house(_,german,_,_,_,prince),Persons),



    /*Position Hints*/
    member(house(A,_,green,_,_,_), Persons),
    member(house(B,_,white,_,_,_), Persons),
    left_of(A, B),

    member(house(C,_,_,_,_,blend), Persons),
    member(house(D,_,_,cats,_,_), Persons),
    next_to(C, D),

    member(house(E,_,_,horse,_,_), Persons),
    member(house(F,_,_,_,_,dunhill), Persons),
    next_to(E, F),

    member(house(G,norweigan,_,_,_,_), Persons),
    member(house(H,_,blue,_,_,_), Persons),
    next_to(G, H),

    member(house(I,_,_,_,_,blend), Persons),
    member(house(J,_,_,_,water,_), Persons),
    next_to(I, J),

    /*Fish */
    member(house(_,_,_,fish,_,_), Persons).

ownerOfFish(Persons, Owner) :-
solution(Persons),
member(house( _,Owner,_,fish,_,_), Persons).


